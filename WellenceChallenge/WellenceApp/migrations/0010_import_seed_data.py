# Generated by Django 5.1.1 on 2024-10-03 14:49

from django.db import migrations
from django.conf import settings
import csv
import os
from django.utils.dateparse import parse_datetime


def import_csv_data(apps, schema_editor):
    Tasks = apps.get_model("WellenceApp", "Tasks")
    csv_file_path = os.path.join(settings.BASE_DIR, "seed_data", "tasks_seed.csv")

    print(f"CSV file path: {csv_file_path}")

    tasks_created = []
    with open(csv_file_path, "r", encoding="utf-8-sig") as file:
        csv_reader = csv.DictReader(file)
        for row in csv_reader:
            task, created = Tasks.objects.get_or_create(
                email=row["email"],
                task=row["task"],
                due_by=parse_datetime(row["due_by"]),
                defaults={
                    "priority": int(row["priority"]),
                    "is_urgent": row["is_urgent"].lower() in ("true", "yes", "1", "on"),
                },
            )
            if created:
                tasks_created.append(task)
            print(
                f"Task {'created' if created else 'already exists'}: {task.email} - {task.task}"
            )

    print(
        f"Created {len(tasks_created)} new tasks. Total tasks in database: {Tasks.objects.count()}"
    )


def reverse_import_csv_data(apps, schema_editor):
    Tasks = apps.get_model("WellenceApp", "Tasks")
    csv_file_path = os.path.join(settings.BASE_DIR, "seed_data", "tasks_seed.csv")

    tasks_deleted = 0
    with open(csv_file_path, "r", encoding="utf-8-sig") as file:
        csv_reader = csv.DictReader(file)
        for row in csv_reader:
            deleted, _ = Tasks.objects.filter(
                email=row["email"],
                task=row["task"],
                due_by=parse_datetime(row["due_by"]),
            ).delete()
            tasks_deleted += deleted

    print(
        f"Deleted {tasks_deleted} tasks. Remaining tasks in database: {Tasks.objects.count()}"
    )


class Migration(migrations.Migration):
    dependencies = [
        ("WellenceApp", "0009_update_tasks_model"),
    ]

    operations = [
        migrations.RunPython(import_csv_data, reverse_code=reverse_import_csv_data),
    ]
